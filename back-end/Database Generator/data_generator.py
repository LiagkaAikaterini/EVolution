
# -*- coding: utf-8 -*-
"""data_generator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tVCrKi3qOdvFWU2vjfPBh4fjy-FtzqwM
"""

from google.colab import drive
drive.mount('/gdrive')
import os
os.listdir('/gdrive/My Drive')
path='/gdrive/My Drive/'

filename = "/gdrive/My Drive/Colab Notebooks/electric_vehicles_data.json"
import json
with open(filename) as f:
  data = json.load(f)
company_names1=[]
for i in range(0,len(data['data'])):
  company_names1.append(data['data'][i]['brand'])
myset=set(company_names1)
company_names1=list(myset)

!pip install randomuser

#Function to produce random datatimes
import random
from random import randrange
from datetime import timedelta

def random_date(start, end):
    """
    This function will return a random datetime between two datetime
    objects.
    """
    delta = end - start
    int_delta = (delta.days * 24 * 60 * 60) + delta.seconds
    random_second = randrange(int_delta)
    return start + timedelta(seconds=random_second)

    
from datetime import datetime

d1 = datetime.strptime('1/1/2018 1:30 PM', '%m/%d/%Y %I:%M %p')
d2 = datetime.strptime('1/1/2021 4:50 AM', '%m/%d/%Y %I:%M %p')

!pip install bcrypt

from randomuser import RandomUser
import hashlib
import bcrypt
# Generate a single user
user = RandomUser()

class Car_Owner:
  username=""
  email=""
  phone=""
  password=""
  points=0
  price_to_pay=0
  hashed_password =""


class Energy_Supplier:
  id=""
  company_name=""
  is_user=""
  username=""
  email=""
  phone=""
  password=""
  hashed_password =""
class Payment:
  id=""
  value_paid=""
  payment_way=""
  data_time=""
  points_used=""
  car_owner_username=""
  bank_id=""

class Bank:
  id=""
  name=""

class Car_Manufacturer:
  id=""
  company_name=""
  is_user=""
  username=""
  password=""
  email=""
  phone=""
  hashed_password =""


user_list = RandomUser.generate_users(100)
energy_suppliers=['Harz Energie','BS Energie','EV Energy Group (FCN)','eVgo Network','EVS Energieversorgung Sylt','Evway','EWB','EWI Energiewerke Isernhagen','Fenie Energ√≠a (Spain)','FLOW Charging','FORTISIS','GardaUno','Gnrgy','GoCharge (IE)','Greenflux']
car_manufacturers=[Car_Manufacturer() for i in range(len(company_names1))]
car_owners = [Car_Owner() for i in range(len(user_list))]
energy_supplier=[Energy_Supplier() for i in range(len(energy_suppliers))]
payment=[Payment() for i in range(len(car_owners))]
banks=[Bank() for i in range(0,4)]

bank=['City Union Bank','Federal Bank','Union Bank','National Bank']

for i in range(0,4):
  banks[i].id=i+1
  banks[i].name=bank[i]



j=0
for i in user_list:
  car_owners[j].username=i.get_username()
  car_owners[j].email=i.get_email()
  car_owners[j].password=i.get_password()
  salt = bcrypt.gensalt()
  car_owners[j].hashed_password  = bcrypt.hashpw(car_owners[j].password.encode(), salt)
  car_owners[j].phone=i.get_phone()
  car_owners[j].points=random.randint(0,10000)
  #car_owners[j].price_to_pay=random.randint(0,1000)/10
  j=j+1

user_list = RandomUser.generate_users(len(energy_suppliers))
j=0
for i in user_list:
  energy_supplier[j].id=j+1
  energy_supplier[j].username=i.get_username() ############## insert from datafiles ???????????
  energy_supplier[j].email=i.get_email()
  energy_supplier[j].password=i.get_password()
  salt = bcrypt.gensalt()
  energy_supplier[j].hashed_password =  bcrypt.hashpw(car_owners[j].password.encode(), salt)
  energy_supplier[j].phone=i.get_phone()
  energy_supplier[j].is_user=random.randint(0,1)
  energy_supplier[j].company_name = energy_suppliers[j]
  j=j+1





user_list1 = RandomUser.generate_users(len(car_manufacturers))
for j in range(len(car_manufacturers)):
  car_manufacturers[j].id=j+1
  car_manufacturers[j].company_name=company_names1[j]
  car_manufacturers[j].is_user=random.randint(0,1)
  car_manufacturers[j].username=user_list1[j].get_username()
  car_manufacturers[j].password=user_list1[j].get_password()
  salt = bcrypt.gensalt()
  car_manufacturers[j].hashed_password =  bcrypt.hashpw(car_manufacturers[j].password.encode(),salt)
  car_manufacturers[j].email=user_list1[j].get_email()
  car_manufacturers[j].phone=user_list1[j].get_phone()

def pick_random(start,end):
  return random.randint(start,end-1)

"""# Car Generator"""

import random
from random import randint


def plate_gen():
  numbers='0123456789'

  L1=chr(randint(65,90))
  L2=chr(randint(65,90))
  L3=chr(randint(65,90))

  N1=random.choice(numbers)
  N2=random.choice(numbers)
  N3=random.choice(numbers)

  s=L1+L2+L3+"-"+N1+N2+N3
  return s

filename = "/gdrive/My Drive/Colab Notebooks/electric_vehicles_data.json"
import json

class car:
    ID=""
    model=""
    Car_Manufacturercompany_name=""
    Car_Ownerusername = ""
    usable_battery_size=""
    plates=""
    ac_charger=""
    dc_charger=""

class charger_type:
  ID=""
  type_=""
  phases=""
  fast_charging=""
  port=""
